#!/bin/bash

OUT_DIR=$1
readarray INPUTS < $2

j=0

for i in "${INPUTS[@]}"
do
    # splitting
    bcftools norm \
        -m - $i \
        --threads 10 \
        -Oz \
        -o $OUT_DIR/tmp/tmp1.vcf.gz

    # unifying variant IDs
    bcftools annotate \
        -x ID \
        -I +'%CHROM:%POS:%REF:%ALT' $OUT_DIR/tmp/tmp1.vcf.gz \
        --threads 10 \
        -Oz \
        -o $OUT_DIR/tmp/tmp2.vcf.gz

    # getting PASS variants for vcf
    bcftools view \
        -f PASS $OUT_DIR/tmp/tmp2.vcf.gz \
        -Oz \
        -o $OUT_DIR/tmp/$j-tmp.vcf.gz

    j=$((var + 1))
done

rm $OUT_DIR/tmp/tmp1.vcf.gz
rm $OUT_DIR/tmp/tmp2.vcf.gz

# merge wes/wgs vcf
# repeat earlier steps for all vcf files changing tmp3.vcf.gz to a unique ID accordingly
# create a merged list
ls $OUT_DIR/tmp/*.vcf.gz > $OUT_DIR/tmp/merge-list

# merging all niddk vcfs
bcftools merge \
    -l $OUT_DIR/tmp/merge-list \
    --Oz \
    -o $OUT_DIR/all-niddk-sequencing.vcf.gz

# converting to plink format
plink \
    --vcf $OUT_DIR/all-niddk-sequencing.vcf.gz \
    --const-fid \
    --make-bed \
    --out $OUT_DIR/all-niddk-wes-wgs

# converting GSA files to plink binary format
#find ./Plink_Files/ -name "*.ped" |
find $OUT_DIR -name "*.ped" |
    while read line
    do
        file=${line%.ped}
        outname=`echo $line | cut -d '/' -f 3`
        plink \
            --file $file \
            --make-bed \
            --out $OUT_DIR/merge-plinks-gsa/$outname
    done

# unifying variant IDs
#ls *.bim |
ls $OUT_DIR/*.bim |
    while read line
    do
        awk '{print $2"\t"$1":"$4":"$6":"$5}' $line > update.ids
        name=${line%.bim}
        plink \
            --bfile $name \
            --update-map update.ids \
            --update-name \
            --make-bed \
            --out $name-newID
    done

# merging gsa
#ls *.bim |
ls $OUT_DIR/*.bim |
    while read line
    do
        name=${line%.bim}
        echo "$name.bed $name.bim $name.fam" >> $OUT_DIR/tmp/merge.list
    done

plink \
    --merge-list $OUT_DIR/tmp/merge.list \
    --make-bed \
    --out $OUT_DIR/merged-gsa

plink \
    --bfile $OUT_DIR/merged-gsa \
    --fill-missing-a2 \
    --make-bed \
    --out $OUT_DIR/merged-gsa-a2fill

# liftover to hg38 and preparing plink format
grep -E "I|D" $OUT_DIR/merged-gsa-a2fill/merged-gsa-a2fill.bim | cut -f 2 > to-be-excluded.list           # removing variants in malformed format.

plink \
    --bfile $OUT_DIR/merged-gsa-a2fill \
    --exclude to-be-excluded.list \
    --make-bed \
    --out $OUT_DIR/merged-gsa-a2fill-clean

plink \
    --bfile $OUT_DIR/merged-gsa-a2fill-clean \
    --recode vcf bgz \
    --output-chr chr26 \
    --out $OUT_DIR/all-gsa-clean

bcftools view \
    -r chr1,chr2,chr3,chr4,chr5,chr6,chr7,chr8,chr9,chr10,chr11,chr12,chr13,chr14,chr15,chr16,chr17,chr18,chr19,chr20,chr21,chr22,chr23 $OUT_DIR/all-gsa-clean/all-gsa-clean.vcf.gz \
    -Oz \
    -o $OUT_DIR/all-gsa-chr1-23.vcf.gz

picard \
    -LiftoverVcf \
    I=$OUT_DIR/all-gsa-chr1-23.vcf.gz \
    O=$OUT_DIR/all-gsa-hg38.vcf.gz \
    CHAIN=../../../reference/hg19ToHg38.over.chain \
    REJECT=rejec.vcf.gz \
    R=../../../reference/hg38.fa                                              # first round liftover to get rejected site due to strands flipped

zcat rejec.vcf.gz| grep -v "#"| cut -f 3 > $OUT_DIR/tmp/to-be-flipped.list

plink  \
    --bfile $OUT_DIR/merged-gsa-a2fill-clean \
    --flip $OUT_DIR/tmp/to-be-flipped.list \
    --make-bed \
    --out $OUT_DIR/merged-gsa-a2fill-clean-flipped

plink \
    --bfile $OUT_DIR/merged-gsa-a2fill-clean-flipped \
    --recode vcf bgz \
    --output-chr chr26 \
    --out $OUT_DIR/all-gsa-clean-flipped

bcftools view \
    -r chr1,chr2,chr3,chr4,chr5,chr6,chr7,chr8,chr9,chr10,chr11,chr12,chr13,chr14,chr15,chr16,chr17,chr18,chr19,chr20,chr21,chr22,chr23 $OUT_DIR/all-gsa-clean-flipped/all-gsa-clean-flipped.vcf.gz \
    -Oz \
    -o $OUT_DIR/all-gsa-clean-flipped/all-gsa-chr1-23-flipped.vcf.gz

picard LiftoverVcf \
    I=$OUT_DIR/all-gsa-clean-flipped/all-gsa-chr1-23-flipped.vcf.gz \
    O=$OUT_DIR/all-gsa-clean-flipped/all-gsa-hg38-flipped.vcf.gz \
    CHAIN=../../../reference/hg19ToHg38.over.chain \
    REJECT=rejec.vcf.gz \
    R=../../../reference/hg38.fa

plink \
    --vcf ./gsa/merge-plinks-gsa/newIDs/all-gsa-hg38-flipped-newID.vcf.gz \
    --const-fid \
    --allow-extra-chr \
    --make-bed \
    --out $OUT_DIR/duplicates-gsa-sequencing-gsa-hg38-lifted

# merging gsa and sequencing to perform king analysis
plink \
    --bfile gsa-hg38-lifted \
    --extract $OUT_DIR/all-niddk-wes-wgs.bim  \
    --allow-extra-chr \
    --make-bed –out tmp1

plink \
    --bfile $OUT_DIR/all-niddk-wes-wgs \
    --extract gsa-hg38-lifted.bim  \
    --allow-extra-chr \
    --make-bed –out tmp2

plink \
    --bfile tmp1 \
    --bmerge tmp2.bed tmp2.bim tmp2.fam \
    --make-bed \
    --out $OUT_DIR/merged-gsa-sequencing

king \
    -b $OUT_DIR/merged-gsa-sequencing.bed \
    --related \
    --degree 2 \
    --prefix related-grade2

