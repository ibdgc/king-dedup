#!/bin/bash

# TODO setup ifthen for liftover depdend on ref genome build

OUT_DIR=$1
INPUT=./setup/samples.csv

# Define two arrays to store input values
declare -a FILES
declare -a REFERENCE

# Read sample input file by line and split into vars
while IFS=, read -r var1 var2
do
  FILES+=("$var1")
  REFERENCE+=("$var2")
done < "$INPUT"

# # Example loop with array input
# for i in "${!FILES[@]}"
# do
#   echo "Pair $i: ${FILES[$i]} and ${REFERENCE[$i]}"
# done

## ROUTINE ORDER
#
# lift over
# bcftools norm
# bcftools annotate
# bcftools view
# merge-list
# bcftools merge
# convert to plink
# convert gsa files to plink
# remove ambiguous snps and flip +
# unifying variant ID
# generate update.ids
# merging gsa as merge.list
# plink merge-gsa
# plink fill-missing-a2
# removing malformed variants
# plink exclude a2fill-clean
# plink recode vcf bgz
# plink convert to plink
# plink merge gsa and seq
# plink extract
# plink gen merged
# king

picard \
    -LiftoverVcf \
    I="$OUT_DIR"/all-gsa-chr1-23.vcf.gz \
    O="$OUT_DIR"/all-gsa-hg38.vcf.gz \
    CHAIN="$OUT_DIR"/tmp/hg19ToHg38.over.chain \
    REJECT=reject.vcf.gz \
    R=$OUT_DIR/tmp/hg38.fa                                              # first round liftover to get rejected site due to strands flipped ## why there are still strand flips, they should have been corrected in lines #73-79 
    RECOVER_SWAPPED_REF_ALT true                                              # added the option for recovering reference allele (plink might change the REF-ALT order if --keep-allele-order option is not set in every command.)

# TODO which file formats do we need to account for as inputs
# .vcf
# .bed
# .bim
# .fam

j=0


# genotyping
# - bedbim > check ref > snpflip (ref genome specific) > if hg19 > convert vcf > liftover > convert plink > ready to merge
# - vcf > convert plink > check ref > snpflip (ref genome specific) > if hg19 > convert vcf > liftover > convert plink > ready to merge
#
# sequencing - assuming hg38
# - vcf > convert plink > snpflip > ready to merge

# TODO add keep-allele-order arg for each plink run

for i in "${FILES[@]}"
do
    # splitting
    bcftools norm \
        -m - "${FILES[$i]}" \
        --threads 10 \
        -Oz \
        -o "$OUT_DIR"/tmp/tmp1.vcf.gz

    # unifying variant IDs
    # bcftools annotate \
    #     -x ID \
    #     -I +'%CHROM:%POS:%REF:%ALT' "$OUT_DIR"/tmp/tmp1.vcf.gz \
    #     --threads 10 \
    #     -Oz \
    #     -o "$OUT_DIR"/tmp/tmp2.vcf.gz

    # getting PASS variants for vcf
    bcftools view \
        -f PASS "$OUT_DIR"/tmp/tmp2.vcf.gz \
        -Oz \
        -o "$OUT_DIR"/tmp/$j-tmp.vcf.gz

    j=$((j + 1))
done

rm "$OUT_DIR"/tmp/tmp1.vcf.gz
rm "$OUT_DIR"/tmp/tmp2.vcf.gz

# merge wes/wgs vcf
# repeat earlier steps for all vcf files changing tmp3.vcf.gz to a unique ID accordingly
# create a merged list
ls "$OUT_DIR"/tmp/*.vcf.gz > "$OUT_DIR"/tmp/merge-list

# merging all niddk vcfs
bcftools merge \
    -l "$OUT_DIR"/tmp/merge-list \
    --Oz \
    -o "$OUT_DIR"/all-niddk-sequencing.vcf.gz

# converting to plink format
plink \
    --vcf "$OUT_DIR"/all-niddk-sequencing.vcf.gz \
    --const-fid \
    --make-bed \
    --out "$OUT_DIR"/all-niddk-wes-wgs
    --keep-allele-order                     ##to keep reference allele as a2

# converting GSA files to plink binary format
# find ./Plink_Files/ -name "*.ped" |
find "$OUT_DIR" -name "*.ped" |
    while read -r line
    do
        FILE=${line%.ped}
        OUTNAME=$(echo "$line" | cut -d '/' -f 3)
        plink \
            --file "$FILE" \
            --make-bed \
            --out "$OUT_DIR"/merge-plinks-gsa/"$OUTNAME"
    done

# unifying variant IDs
# align each bim file to positive strand of reference genome prior to merging
python snptest.py \ # TODO @kyle, should this be snpflip?
    -b <plinkFileName>.bim \
    -rgf <referenceGenome>.fa \
    -op <outputFilesPrefix>

cat <outputFilesPrefix>.ambiguous <outputFilesPrefix>.bad > <outputFilesPrefix>.remove

# Remove ambiguous SNPs and flip to positive strand
plink \
    --bfile <plinkFileName> \
    --exclude <outputFilesPrefix>.remove \
    --make-bed \
    --out <tempPlinkFiles>

plink \
    --bfile <tempPlinkFiles> \
    --flip <outputFilesPrefix>.reverse \
    --make-bed \
    --out <finalPlinkFiles>

# ls *.bim |
find "$OUT_DIR" -name "*.bim" |
    while read -r line
    do
        awk '{print $2"\t"$1":"$4":"$6":"$5}' "$line" > update.ids
        name=${line%.bim}
        plink \
            --bfile "$NAME" \
            --update-map update.ids \
            --update-name \
            --make-bed \
            --out "$NAME"-newID
            ##no need to add id length parameter when updating ids from a file. It is only required if IDs are set using --set-missing-var-ids.
    done

# merging gsa
# ls *.bim |
find "$OUT_DIR" -name "*.bim" |
    while read -r line
    do
        name=${line%.bim}
        echo "$NAME.bed $NAME.bim $NAME.fam" >> "$OUT_DIR"/tmp/merge.list
    done

plink \
    --merge-list "$OUT_DIR"/tmp/merge.list \
    --make-bed \
    --out "$OUT_DIR"/merged-gsa

plink \
    --bfile "$OUT_DIR"/merged-gsa \
    --fill-missing-a2 \
    --make-bed \
    --out "$OUT_DIR"/merged-gsa-a2fill

# liftover to hg38 and preparing plink format
grep -E "I|D" "$OUT_DIR"/merged-gsa-a2fill/merged-gsa-a2fill.bim | cut -f 2 > to-be-excluded.list           # removing variants in malformed format.

plink \
    --bfile "$OUT_DIR"/merged-gsa-a2fill \
    --exclude to-be-excluded.list \
    --make-bed \
    --out "$OUT_DIR"/merged-gsa-a2fill-clean

plink \
    --bfile "$OUT_DIR"/merged-gsa-a2fill-clean \
    --recode vcf bgz \
    --output-chr chr26 \
    --out "$OUT_DIR"/all-gsa-chr1-23.vcf.gz
    --chr 1-22,X ##select chr1-23

#picard LiftoverVcf \
#    I="$OUT_DIR"/all-gsa-clean-flipped/all-gsa-chr1-23-flipped.vcf.gz \
#    O="$OUT_DIR"/all-gsa-clean-flipped/all-gsa-hg38-flipped.vcf.gz \
#    CHAIN="$OUT_DIR"/tmp/hg19ToHg38.over.chain \
#    REJECT=reject.vcf.gz \
#    R="$OUT_DIR"/tmp/hg38.fa

plink \
    --vcf ./gsa/merge-plinks-gsa/newIDs/all-gsa-hg38.vcf.gz \
    --const-fid \
    --allow-extra-chr \
    --make-bed \
    --out "$OUT_DIR"/duplicates-gsa-sequencing-gsa-hg38-lifted
    --keep-allele-order

# merging gsa and sequencing to perform king analysis
plink \
    --bfile gsa-hg38-lifted \
    --extract "$OUT_DIR"/all-niddk-wes-wgs.bim  \
    --allow-extra-chr \
    --make-bed –out tmp1
    --keep-allele-order

plink \
    --bfile "$OUT_DIR"/all-niddk-wes-wgs \
    --extract gsa-hg38-lifted.bim  \
    --allow-extra-chr \
    --make-bed –out tmp2
    --keep-allele-order

plink \
    --bfile tmp1 \
    --bmerge tmp2.bed tmp2.bim tmp2.fam \
    --make-bed \
    --out "$OUT_DIR"/merged-gsa-sequencing

king \
    -b "$OUT_DIR"/merged-gsa-sequencing.bed \
    --related \
    --degree 2 \
    --prefix related-grade2

rm -rf "$OUT_DIR"/tmp
